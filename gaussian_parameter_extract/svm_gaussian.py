
import pylab as plb
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from scipy import asarray as ar,exp
import numpy as np
from lmfit.models import GaussianModel, ConstantModel

x_raw = ar([1510.0196,1510.5286,1511.0371,1511.5321,1512.027,1512.5201,1513.0312,1513.5396,1514.0368,1514.532,1515.022,1515.5281,1516.0274,1516.5262,1517.0342,1517.5373,1518.0407,1518.5281,1519.0195,1519.5197,1520.0236,1520.533,1521.0327,1521.5327,1522.027,1522.5302,1523.0331,1523.5286,1524.026,1524.525,1525.0365,1525.5386,1526.0357,1526.5262,1527.0205,1527.5269,1528.0286,1528.5326,1529.0266,1529.5258,1530.0285,1530.5241,1531.0251,1531.5236,1532.0305,1532.53,1533.0229,1533.5193,1534.0153,1534.5288,1535.0378,1535.5398,1536.0343,1536.5285,1537.0295,1537.5238,1538.025,1538.5265,1539.0302,1539.5319,1540.0229,1540.5266,1541.0277,1541.5415,1542.0403,1542.5373,1543.0352,1543.5318,1544.0371,1544.5311,1545.025,1545.5206,1546.0226,1546.5373,1547.036,1547.5347,1548.0228,1548.5285,1549.0361,1549.5406,1550.0367,1550.5266,1551.0278,1551.5242,1552.0235,1552.5248,1553.0309,1553.5367,1554.0302,1554.5252,1555.0184,1555.5256,1556.0338,1556.5319,1557.0285,1557.5215,1558.0259,1558.5238,1559.0248,1559.5263,1560.0263,1560.5278,1561.0159,1561.5143,1562.0129,1562.5227,1563.033,1563.5298,1564.0293,1564.5246,1565.0293,1565.5249,1566.021,1566.5189,1567.0226,1567.5312,1568.0266,1568.5198,1569.0109,1569.516,1570.0208,1570.5247,1571.0198,1571.5155,1572.0191,1572.5113,1573.0122,1573.5119,1574.0171,1574.518,1575.0079,1575.502,1575.9997,1576.5133,1577.0231,1577.5261,1578.0189,1578.5154,1579.0167,1579.5089,1580.0128,1580.5128,1581.019,1581.5173,1582.0128,1582.5134,1583.016,1583.525,1584.0239,1584.5258,1585.0206,1585.5225,1586.0233,1586.5167,1587.0126,1587.512,1588.022,1588.5218,1589.0208,1589.5139,1590.0132,1590.5211,1591.0245,1591.5238,1592.0169,1592.5196,1593.0134,1593.5105,1594.0117,1594.516,1595.02,1595.5134,1596.0118,1596.5088,1597.0187,1597.5266,1598.0268,1598.5211,1599.0156,1599.5189,1600.0141,1600.516,1601.016,1601.5209,1602.0221,1602.5146,1603.013,1603.5128,1604.0218,1604.5199,1605.0212,1605.5182,1606.0195,1606.5179,1607.011,1607.5073,1608.0082,1608.5203,1609.02,1609.5193,1610.0091,1610.5108,1611.016,1611.5184,1612.0179,1612.5108,1613.0132,1613.5051,1614.0025,1614.5061,1615.0185,1615.52,1616.0133,1616.5046,1617.0056,1617.5163,1618.0181,1618.5154,1619.0068,1619.5046,1620.006,1620.5054,1621.0095,1621.51,1622.0169,1622.5082,1623.0046,1623.5019,1624.0058,1624.5101])
y_raw = ar([-24.057806015014648,-23.946317672729492,-23.75282096862793,-23.572376251220703,-23.338973999023438,-23.104557037353516,-22.884113311767578,-22.660003662109375,-22.561113357543945,-22.42042350769043,-22.285659790039063,-22.041534423828125,-21.804609298706055,-21.576534271240234,-21.448863983154297,-21.303560256958008,-21.177587509155273,-21.07081413269043,-20.93876838684082,-20.678308486938477,-20.490524291992188,-20.314090728759766,-20.117168426513672,-19.933603286743164,-19.78577995300293,-19.617361068725586,-19.522777557373047,-19.380525588989258,-19.17997932434082,-18.969966888427734,-18.774482727050781,-18.593025207519531,-18.497833251953125,-18.424327850341797,-18.341123580932617,-18.256126403808594,-18.098474502563477,-17.91325569152832,-17.75543212890625,-17.625564575195313,-17.450904846191406,-17.379621505737305,-17.262676239013672,-17.174537658691406,-17.081319808959961,-16.993141174316406,-16.813339233398438,-16.639139175415039,-16.52757453918457,-16.427286148071289,-16.411140441894531,-16.343973159790039,-16.327381134033203,-16.193157196044922,-16.091516494750977,-15.970961570739746,-15.889710426330566,-15.806929588317871,-15.733906745910645,-15.713761329650879,-15.664427757263184,-15.645350456237793,-15.575150489807129,-15.489316940307617,-15.373679161071777,-15.314512252807617,-15.279855728149414,-15.27567195892334,-15.325763702392578,-15.290909767150879,-15.331643104553223,-15.217769622802734,-15.21617317199707,-15.055276870727539,-15.002053260803223,-14.988292694091797,-14.971526145935059,-15.022444725036621,-15.009856224060059,-14.970912933349609,-15.050315856933594,-15.00454044342041,-14.940582275390625,-14.897773742675781,-14.94524097442627,-15.062819480895996,-15.122420310974121,-15.186071395874023,-15.179648399353027,-15.151126861572266,-15.094350814819336,-15.09482479095459,-15.13578987121582,-15.061670303344727,-15.09760856628418,-15.166591644287109,-15.211099624633789,-15.247358322143555,-15.230311393737793,-15.21096134185791,-15.199553489685059,-15.231618881225586,-15.281603813171387,-15.357376098632812,-15.416465759277344,-15.514884948730469,-15.55073356628418,-15.549376487731934,-15.605953216552734,-15.54885196685791,-15.603811264038086,-15.64256763458252,-15.74420166015625,-15.84660530090332,-15.961145401000977,-16.008829116821289,-16.053226470947266,-16.094263076782227,-16.173669815063477,-16.314006805419922,-16.416843414306641,-16.594568252563477,-16.705842971801758,-16.935440063476563,-16.959012985229492,-17.083650588989258,-17.174375534057617,-17.23579216003418,-17.289348602294922,-17.373769760131836,-17.566858291625977,-17.653806686401367,-17.847549438476563,-18.044986724853516,-18.039113998413086,-18.150121688842773,-18.172998428344727,-18.306770324707031,-18.490766525268555,-18.622045516967773,-18.852432250976562,-19.035579681396484,-19.096090316772461,-19.195623397827148,-19.280160903930664,-19.410318374633789,-19.454639434814453,-19.673061370849609,-19.803281784057617,-19.943870544433594,-20.134210586547852,-20.326148986816406,-20.428129196166992,-20.594423294067383,-20.693338394165039,-20.866804122924805,-21.182113647460937,-21.348161697387695,-21.702699661254883,-21.815053939819336,-22.067659378051758,-22.248447418212891,-22.394283294677734,-22.541261672973633,-22.749588012695313,-22.941549301147461,-23.14140510559082,-23.379243850708008,-23.809202194213867,-24.039707183837891,-24.312978744506836,-24.470958709716797,-24.670009613037109,-24.921714782714844,-25.240007400512695,-25.527385711669922,-25.820425033569336,-26.135011672973633,-26.46879768371582,-26.840909957885742,-27.13935661315918,-27.475748062133789,-27.76995849609375,-28.075624465942383,-28.510492324829102,-28.674064636230469,-29.096487045288086,-29.399435043334961,-29.658405303955078,-30.089235305786133,-30.515754699707031,-30.824121475219727,-31.337907791137695,-31.744451522827148,-32.213680267333984,-32.625560760498047,-33.042488098144531,-33.586662292480469,-33.854522705078125,-34.246883392333984,-34.77447509765625,-35.156402587890625,-35.478717803955078,-36.017684936523438,-36.419525146484375,-36.996128082275391,-37.475513458251953,-37.944705963134766,-38.317722320556641,-38.800022125244141,-39.332756042480469,-39.814510345458984,-40.517528533935547,-40.920856475830078,-41.486358642578125,-42.005428314208984,-42.632450103759766,-43.288738250732422,-43.729610443115234,-44.304676055908203,-45.030567169189453,-45.251136779785156,-45.788860321044922,-46.133846282958984,-46.817672729492188,-46.992988586425781,-47.512283325195313,-48.023807525634766,-48.3260498046875,-48.82171630859375])
n = len(x_raw)
newn = n
x = np.zeros(newn)  
y = np.zeros(newn)
for i in range(n):
	x[i] = x_raw[i]
	y[i] = y_raw[i]
	
#x = ar(range(10))
#y = ar([0,1,2,3,4,5,4,3,2,1])

n = len(x)                         #the number of data
mean = np.mean(x)                  #note this correction
sigma = np.std(y)        #note this correction
print mean, sigma
def gaus(x,a,x0,sigma):# this gauss is pre-defeined
    return a/(np.sqrt(6.28)*sigma)*exp(-(x-x0)**2/(2*sigma**2))
#+ a*exp(-(x-x0-delta)**2/(2*sigma**2))
popt,pcov = curve_fit(gaus,x,y)
#,p0=[1,mean, sigma, 5]
plt.plot(x,y,'b+:',label='data')
plt.plot(x,gaus(x,*popt),'ro:',label='fit')
plt.legend()
plt.title('spectre 1550')
plt.xlabel('Wavelength(nm)')
plt.ylabel('IL(dBm)')
plt.show()
